parameters:
  - name: poolNameTemplate
    type: string
    default: ""
  - name: poolVmImage
    type: string
    default: "ubuntu-22.04"
  - name: sourceBranch
    type: string
    default: "refs/heads/master"
  - name: environments
    type: object
    default:
      - name: dev
      - name: qa
      - name: prod
  - name: azureSubscriptionTemplate
    type: string
  - name: terraformFolder
    type: string
  - name: validateEnabled
    type: boolean
    default: true
  - name: awsRegion
    type: string
    default: ""
  - name: awsServiceConnectionTemplate
    type: string
    default: ""

stages:
  - stage: plan
    jobs:
      - ${{ each env in parameters.environments }}:
          - job: ${{ env.name }}
            pool:
              ${{ if not(eq(parameters.poolNameTemplate, '')) }}:
                name: ${{ format(parameters.poolNameTemplate, env.name) }}
              ${{ if not(eq(parameters.poolVmImage, '')) }}:
                vmImage: ${{ parameters.poolVmImage }}
            steps:
              - ${{ if not(eq(parameters.awsRegion, '')) }}:
                  - template: ../aws_creds.yaml
                    parameters:
                      awsRegion: ${{ parameters.awsRegion }}
                      awsServiceConnection: ${{ format(parameters.awsServiceConnectionTemplate, env.name) }}

              - task: AzureCLI@2
                inputs:
                  azureSubscription: ${{ format(parameters.azureSubscriptionTemplate, env.name) }}
                  addSpnToEnvironment: true
                  scriptType: bash
                  scriptLocation: inlineScript
                  inlineScript: |
                    set -e

                    if [ -n "${OPA_BLAST_RADIUS}" ] && [ "${OPA_BLAST_RADIUS}" -eq "${OPA_BLAST_RADIUS}" ] 2>/dev/null; then
                      echo OPA_BLAST_RADIUS: ${OPA_BLAST_RADIUS}
                    else
                      export OPA_BLAST_RADIUS=50
                      echo OPA_BLAST_RADIUS: ${OPA_BLAST_RADIUS}
                    fi

                    make prepare

                    if [[ "${VALIDATE_ENABLED}" == "True" ]]; then
                      make validate
                      if [[ $(git status --porcelain) ]]; then
                        echo -e "Changed or untracked files found. Please run 'make validate' and then commit the changed and/or untracked files.\n" 1>&2
                        echo -e "\nOutput from 'git status':\n\n" 1>&2
                        git status
                        echo -e "\nOutput from 'git diff':\n\n" 1>&2
                        git --no-pager diff
                        exit 1
                      fi
                    fi

                    make plan
                env:
                  CI: "true"
                  DIR: ${{ parameters.terraformFolder }}
                  ENV: ${{ env.name }}
                  OPA_BLAST_RADIUS: $(opaBlastRadius)
                  VALIDATE_ENABLED: ${{ parameters.validateEnabled }}
                  AWS_ACCESS_KEY_ID: $(awsAccessKeyId)
                  AWS_SECRET_ACCESS_KEY: $(awsSecretAccessKey)
                  AWS_DEFAULT_REGION: $(awsDefaultRegion)
                displayName: "Terraform Plan"

              - task: PublishPipelineArtifact@0
                inputs:
                  targetPath: $(Build.Repository.LocalPath)/${{ parameters.terraformFolder }}/.terraform/plans
                  artifactName: "${{ env.name }}.enc"
                displayName: "Publish artifact"
                condition: and(succeeded(), eq(variables['Build.sourceBranch'], '${{ parameters.sourceBranch }}'))
